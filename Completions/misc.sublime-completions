//Completions for other functions:
{
	"scope": "source.luaecc - string",
	"completions": [
		"_G",
		"_VERSION",
		{ "trigger": "type( v )", "contents": "type( ${1:v} )" },
		{ "trigger": "setfenv( f, table )", "contents": "setfenv( ${1:f}, ${2:table} )" },
		{ "trigger": "loadstring( string, [chunkname] )", "contents": "loadstring( ${1:string}, ${2:[chunkname]} )" },
		{ "trigger": "pairs( t )", "contents": "pairs( ${1:v1}, ${2:v2} )" },
		{ "trigger": "rawequal( v1, v2 )", "contents": "rawequal( ${1:...} )" },
		{ "trigger": "ipairs( t )", "contents": "ipairs( ${1:t} )" },
		{ "trigger": "xpcall( f, err )", "contents": "xpcall( ${1:f}, ${2:err} )" },
		{ "trigger": "read( ... )", "contents": "read( ${1:...} )" },
		{ "trigger": "unpack( list, [i], j )", "contents": "unpack( ${1:list}, ${2:i}, ${3:j} )" },
		{ "trigger": "setmetatable( table, metatable )", "contents": "setmetatable( ${1:table}, ${2:metatable} )" },
		{ "trigger": "rawset( table, index, value )", "contents": "rawset( ${1:table}, ${2:index}, ${3:value} )" },
		{ "trigger": "rawget( table, index )", "contents": "rawget( ${1:table}, ${2:index} )" },
		{ "trigger": "getmetatable( object )", "contents": "getmetatable( ${1:object} )" },
		{ "trigger": "printError( ... )", "contents": "printError( ${1:...} )" },
		{ "trigger": "sleep( seconds )", "contents": "sleep( ${1:seconds} )" },
		{ "trigger": "assert( v, message )", "contents": "assert( ${1:v}, ${2:message} )" },
		{ "trigger": "error( message, [level] )", "contents": "error( ${1:message}, ${2:[level]} )" },
		{ "trigger": "pcall( f, ... )", "contents": "pcall( ${1:f}, ${2:...} )" },
		{ "trigger": "tostring( e )", "contents": "tostring( ${1:e} )" },
		{ "trigger": "next( table, [index] )", "contents": "next( ${1:table}, ${2:[index]} )" },
		{ "trigger": "tonumber( e, [base] )", "contents": "tonumber( ${1:e}, ${2:[base]} )" },
		{ "trigger": "write( ... )", "contents": "write( ${1:...} )" },
		{ "trigger": "loadfile( [filename] )", "contents": "loadfile( ${1:[filename]} )" },
		{ "trigger": "dofile( [filename] )", "contents": "dofile( ${1:[filename]} )" },
		{ "trigger": "select( index, ... )", "contents": "select( ${1:table}, ${2:...} )" },
		{ "trigger": "getfenv( [f] )", "contents": "getfenv( ${1:...} )" },
		{ "trigger": "load( func, [chunkname] )", "contents": "load( ${1:func}, ${2:[chunkname]} )" },
		{ "trigger": "print( ... )", "contents": "print( ${1:...} )" }
	]
}
