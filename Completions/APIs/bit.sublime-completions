//Completions for the bit API:
{
	"scope": "source.luaecc - string",
	"completions": [
		{ "trigger": "bit.bnot(n)", "contents": "bit.bnot( ${1:n} )" },
		{ "trigger": "bit.band(m, n)", "contents": "bit.band( ${1:m}, ${2:n} )" },
		{ "trigger": "bit.bor(m, n)", "contents": "bit.bor( ${1:m}, ${2:n} )" },
		{ "trigger": "bit.bxor(m, n)", "contents": "bit.bxor( ${1:m}, ${2:n} )" },
		{ "trigger": "bit.brshift(n, bits)", "contents": "bit.brshift( ${1:n}, ${2:bits} )" },
		{ "trigger": "bit.blshift(n, bits)", "contents": "bit.blshift( ${1:n}, ${2:bits} )" },
		{ "trigger": "bit32.bxor( ... )", "contents": "bit32.bxor( ${1:...} )" },
		{ "trigger": "bit32.bor( ... )", "contents": "bit32.bor( ${1:...} )" },
		{ "trigger": "bit32.lshift( ... )", "contents": "bit32.lshift( ${1:...} )" },
		{ "trigger": "bit32.rshift( ... )", "contents": "bit32.rshift( ${1:...} )" },
		{ "trigger": "bit32.arshift( ... )", "contents": "bit32.arshift( ${1:...} )" },
		{ "trigger": "bit32.btest( ... )", "contents": "bit32.btest( ${1:...} )" },
		{ "trigger": "bit32.band( ... )", "contents": "bit32.band( ${1:...} )" },
		{ "trigger": "bit32.bnot( ... )", "contents": "bit32.bnot( ${1:...} )" }
	]
}
